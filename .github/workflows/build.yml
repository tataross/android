on: push

jobs:
    backup:
        runs-on: ubuntu-latest
        if: github.event_name == 'push'
        steps:
        - uses: actions/checkout@main
        - run: |
              git pull --unshallow
              echo '${{secrets.KEY}}' > key
              chmod 400 key
              git -c core.sshCommand='ssh -i key -o StrictHostKeyChecking=no' push -f git@bitbucket.org:chaowenguo/${GITHUB_REPOSITORY#*/}
    build:
        runs-on: ubuntu-latest
        if: github.event_name == 'dummy'
        steps:
        - uses: actions/check1out@main
        - uses: actions/setup-java@main
          with:
              java-version: 17.x
              distribution: zulu
        - run: |
              keytool -genkey -keystore release.jks -keyalg RSA -keysize 2048 -validity 10000 -storepass 123456 -alias release -dname 'CN=(名字与姓氏), OU=(组织单位名称), O=(组织名称), L=(城市或区域名称), ST=(州或省份名称), C=(单位的两字母国家代码)'
              mkdir res
              $ANDROID_HOME/build-tools/33.0.0/aapt2 compile --dir res -o out.zip
              $ANDROID_HOME/build-tools/33.0.0/aapt2 link out.zip -I $ANDROID_HOME/platforms/android-33/android.jar --manifest AndroidManifest.xml -o out.apk
              #gradle --warning-mode all copyDependencies
              javac -Xlint:deprecation -cp $ANDROID_HOME/platforms/android-33/android.jar com/main/*.java
              java -cp $ANDROID_HOME/build-tools/33.0.0/lib/d8.jar com.android.tools.r8.D8 com/main/*.class --lib $ANDROID_HOME/platforms/android-33/android.jar --release 
              $ANDROID_HOME/build-tools/33.0.0/aapt add out.apk classes.dex assets/*
              $ANDROID_HOME/build-tools/33.0.0/zipalign 4 out.apk tmp.apk
              mv tmp.apk out.apk
              java -jar $ANDROID_HOME/build-tools/33.0.0/lib/apksigner.jar sign --ks release.jks --ks-pass pass:123456 out.apk
              #id=$(curl -H authorization:token\ ${{secrets.GITHUB_TOKEN}} https://api.github.com/repos/$GITHUB_REPOSITORY/releases/latest | python -c 'import json,sys,builtins; builtins.print(json.loads(sys.stdin.read()).get("id"))')
              #curl -X DELETE -H authorization:token\ ${{secrets.GITHUB_TOKEN}} https://api.github.com/repos/$GITHUB_REPOSITORY/releases/$id
        - uses: marvinpinto/action-automatic-releases@master
          with:
              repo_token: ${{secrets.GITHUB_TOKEN}}
              automatic_release_tag: latest
              files: out.apk
    test:
        runs-on: macos-latest
        if: github.event_name == 'push'
        steps:
        - uses: actions/checkout@main
        - run: |
              #brew install dpkg
              echo y | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager system-images\;android-30\;google_apis\;x86_64 --channel=0
              echo no | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd -f -n android -k system-images\;android-30\;google_apis\;x86_64
              $ANDROID_HOME/emulator/emulator -avd android -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim -memory 4096 &
              $ANDROID_HOME/platform-tools/adb wait-for-device
              $ANDROID_HOME/platform-tools/adb root
              while [[ $($ANDROID_HOME/platform-tools/adb shell getprop sys.boot_completed | tr -d '\r') != 1 ]]
              do
                  sleep 30
              done
              $ANDROID_HOME/platform-tools/adb shell getprop sys.boot_completed | tr -d '\r'
              $ANDROID_HOME/platform-tools/adb devices -l
              $ANDROID_HOME/platform-tools/adb install cashzine.apk
              $ANDROID_HOME/platform-tools/adb shell '/system/bin/am start -n com.sky.sea.cashzine/com.sky.sea.home.main.MainActivity
              /system/bin/sleep 2m
              /system/bin/uiautomator dump /data/local/tmp/ui0.xml
              array=($(cat /data/local/tmp/ui.xml | awk -F ll_home_home {print\$NF} | awk -F]\" {print\$1} | awk -F \"\\\\[ {print\$NF} | awk {gsub\(/[][\,]/\,\"\ \"\,\$0\)}1))
              input tap $(($((${array[0]} + ${array[2]})) / 2)) $(($((${array[1]} + ${array[3]})) / 2))
              /system/bin/sleep 2m
              /system/bin/uiautomator dump /data/local/tmp/ui1.xml
              screencap -p /data/local/tmp/shot0.png'
              $ANDROID_HOME/platform-tools/adb pull /data/local/tmp/ui0.xml ui0.xml
              $ANDROID_HOME/platform-tools/adb pull /data/local/tmp/ui1.xml ui1.xml
              $ANDROID_HOME/platform-tools/adb pull /data/local/tmp/shot0.png shot0.png
        - uses: actions/upload-artifact@master
          with:
              path: |
                  ui0.xml
                  ui1.xml
                  shot0.png
    clean:
        runs-on: ubuntu-latest
        permissions:
            actions: write
        steps:
        - uses: actions/setup-python@main
          with:
              python-version: 3.x
        - run: |
              pip install aiohttp
              curl https://bitbucket.org/chaowenguo/common/raw/main/clean.py | python - ${{secrets.GITHUB_TOKEN}}
